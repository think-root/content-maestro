name: Release content-maestro

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0) - leave empty for automatic versioning'
        required: false
        type: string

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"

      - name: Install dependencies
        run: npm install

      - name: Manual Release (with specified version)
        if: ${{ github.event.inputs.version != '' }}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          echo "Setting version to ${{ github.event.inputs.version }}"
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          git add package.json
          git commit -m "chore: bump version to ${{ github.event.inputs.version }}"
          git tag "v${{ github.event.inputs.version }}"
          git push https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}.git main --tags
          gh release create "v${{ github.event.inputs.version }}" \
            --title "Release v${{ github.event.inputs.version }}" \
            --notes "Release version ${{ github.event.inputs.version }}" \
            --latest

      - name: Automatic Release (semantic versioning)
        if: ${{ github.event.inputs.version == '' }}
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx semantic-release --debug
